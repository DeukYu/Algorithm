#include <iostream>
#include <vector>

using namespace std;
//문제 설명
//길이가 같은 두 1차원 정수 배열 a, b가 매개변수로 주어집니다.a와 b의 내적을 return 하도록 solution 함수를 완성해주세요.
//
//이때, a와 b의 내적은 a[0] * b[0] + a[1] * b[1] + ... + a[n - 1] * b[n - 1] 입니다. (n은 a, b의 길이)
//
//제한사항
//a, b의 길이는 1 이상 1, 000 이하입니다.
//a, b의 모든 수는 - 1, 000 이상 1, 000 이하입니다.
//입출력 예
//a	b	result
//[1, 2, 3, 4][-3, -1, 0, 2]	3
//[-1, 0, 1][1, 0, -1] - 2
//입출력 예 설명
//입출력 예 #1
//a와 b의 내적은 1 * (-3) + 2 * (-1) + 3 * 0 + 4 * 2 = 3 입니다.
//
//입출력 예 #2
//
//a와 b의 내적은(-1) * 1 + 0 * 0 + 1 * (-1) = -2 입니다.
//**************************************************************************************************************************
int solution(vector<int> a, vector<int> b) {

	int answer = 1234567890;
	answer = 0;

	for (int i = 0; i < a.size(); ++i)
	{
		answer += a[i] * b[i];
	}
	return answer;
}
//**************************************************************************************************************************
//문제 설명
//주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다.숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수를 완성해주세요.
//
//제한사항
//nums에 들어있는 숫자의 개수는 3개 이상 50개 이하입니다.
//nums의 각 원소는 1 이상 1, 000 이하의 자연수이며, 중복된 숫자가 들어있지 않습니다.
//입출력 예
//nums	result
//[1, 2, 3, 4]	1
//[1, 2, 7, 6, 4]	4
//입출력 예 설명
//입출력 예 #1
//[1, 2, 4]를 이용해서 7을 만들 수 있습니다.
//
//입출력 예 #2
//[1, 2, 4]를 이용해서 7을 만들 수 있습니다.
//[1, 4, 6]을 이용해서 11을 만들 수 있습니다.
//[2, 4, 7]을 이용해서 13을 만들 수 있습니다.
//[4, 6, 7]을 이용해서 17을 만들 수 있습니다.
//**************************************************************************************************************************
bool IsPrime(int num)
{
	if (num == 0 || num == 1) return false;
	for (int i = 2; i < num / 2; ++i)
	{
		if (num % i == 0) return false;
	}
	return true;
}

int solution(vector<int> nums) {
	int answer = -1;
	answer = 0;

	for (int i = 0; i < nums.size() - 2 ; ++i)
	{
		for (int j = i + 1; j < nums.size() - 1; ++j)
		{
			for (int k = j + 1; k < nums.size(); ++k)
			{
				int sum = nums[i] + nums[j] + nums[k];
				if (IsPrime(sum))
					answer += 1;
			}
		}
	}

	return answer;
}
//**************************************************************************************************************************